{
  "_args": [
    [
      {
        "raw": "enquirer@^0.4.1",
        "scope": null,
        "escapedName": "enquirer",
        "name": "enquirer",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "/Users/leblancc/Repositories/gucci/node_modules/gluegun"
    ]
  ],
  "_from": "enquirer@>=0.4.1 <0.5.0",
  "_id": "enquirer@0.4.1",
  "_inCache": true,
  "_location": "/enquirer",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/enquirer-0.4.1.tgz_1476736764717_0.9856874535325915"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "enquirer@^0.4.1",
    "scope": null,
    "escapedName": "enquirer",
    "name": "enquirer",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gluegun"
  ],
  "_resolved": "https://registry.npmjs.org/enquirer/-/enquirer-0.4.1.tgz",
  "_shasum": "7ce671c44cfff63add1e7971bf32b9cb3efc97ed",
  "_shrinkwrap": null,
  "_spec": "enquirer@^0.4.1",
  "_where": "/Users/leblancc/Repositories/gucci/node_modules/gluegun",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/enquirer/enquirer/issues"
  },
  "contributors": [
    {
      "name": "Brian Woodward",
      "email": "brian.woodward@gmail.com",
      "url": "https://github.com/doowb"
    },
    {
      "name": "Jon Schlinkert",
      "email": "jon.schlinkert@sellside.com",
      "url": "http://twitter.com/jonschlinkert"
    }
  ],
  "dependencies": {
    "choices-separator": "^0.1.2",
    "clone-deep": "^0.2.4",
    "collection-visit": "^0.2.3",
    "component-emitter": "^1.2.1",
    "debug": "^2.2.0",
    "extend-shallow": "^2.0.1",
    "isobject": "^2.1.0",
    "lazy-cache": "^2.0.1",
    "promise-reduce": "^2.1.0",
    "prompt-base": "^0.5.0",
    "prompt-question": "^0.4.0",
    "readline-ui": "^0.1.2"
  },
  "description": "Intuitive, plugin-based prompt system for node.js. Much faster and lighter alternative to Inquirer, with all the same prompt types and more, but without the bloat.",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-eslint": "^3.0.1",
    "gulp-format-md": "^0.1.11",
    "gulp-istanbul": "^1.1.1",
    "gulp-mocha": "^3.0.1",
    "gulp-unused": "^0.2.0",
    "mocha": "^3.1.2",
    "strip-color": "^0.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7ce671c44cfff63add1e7971bf32b9cb3efc97ed",
    "tarball": "https://registry.npmjs.org/enquirer/-/enquirer-0.4.1.tgz"
  },
  "engines": {
    "node": ">=5.0"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "878531913c8a0ecef59c30eebd9158370742f539",
  "homepage": "https://github.com/enquirer/enquirer",
  "keywords": [
    "answer",
    "answers",
    "ask",
    "checkbox",
    "choice",
    "cli",
    "command",
    "enquirer",
    "input",
    "inquire",
    "inquirer",
    "interact",
    "list",
    "menu",
    "password",
    "prompt",
    "prompts",
    "question",
    "readline",
    "stdin",
    "stdout",
    "terminal",
    "tty",
    "ui"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "doowb",
      "email": "brian.woodward@gmail.com"
    },
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "enquirer",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"https://github.com/enquirer/enquirer\">\n    <img width=\"525\" src=\"https://github.com/enquirer/artwork/blob/master/assets/enquirer-01-high-resolution-dark.png?raw=true\">\n  </a>\n</p>\n\n# enquirer [![NPM version](https://img.shields.io/npm/v/enquirer.svg?style=flat)](https://www.npmjs.com/package/enquirer) [![NPM downloads](https://img.shields.io/npm/dm/enquirer.svg?style=flat)](https://npmjs.org/package/enquirer) [![Build Status](https://img.shields.io/travis/enquirer/enquirer.svg?style=flat)](https://travis-ci.org/enquirer/enquirer)\n\nIntuitive, plugin-based prompt system for node.js. Much faster and lighter alternative to Inquirer, with all the same prompt types and more, but without the bloat.\n\n## Table of Contents\n\n- [Usage](#usage)\n- [Prompt types](#prompt-types)\n  * [Publishing prompt types](#publishing-prompt-types)\n- [Plugins](#plugins)\n  * [Publishing plugins](#publishing-plugins)\n- [Why another prompt module?](#why-another-prompt-module)\n- [About](#about)\n  * [Related projects](#related-projects)\n  * [Contributing](#contributing)\n  * [Running tests](#running-tests)\n  * [Author](#author)\n  * [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Usage\n\n### [Enquirer](index.js#L18)\n\nCreate an instance of `Enquirer` with the given `options`.\n\n**Example**\n\n```js\nvar Enquirer = require('enquirer');\nvar enquirer = new Enquirer();\n```\n\n**Params**\n\n* `options` **{Object}**\n\n### [.register](index.js#L74)\n\nRegister a new prompt `type` with the given `fn`.\n\n**Example**\n\n```js\nenquirer.register('confirm', require('enquirer-prompt-confirm'));\n```\n\n**Params**\n\n* `type` **{String}**: The name of the prompt type\n* `fn` **{Function}**: Prompt function that inherits from [prompt-base](https://github.com/enquirer/prompt-base).\n* `returns` **{Object}**: Returns the Enquirer instance for chaining.\n\n### [.use](index.js#L93)\n\nInvoke a plugin `fn`\n\n**Example**\n\n```js\nenquirer.use(require('some-enquirer-plugin'));\n```\n\n**Params**\n\n* `fn` **{Function}**: Function that takes an instance of `Enquirer`\n* `returns` **{Object}**: Returns the instance for chaining.\n\n### [.question](index.js#L131)\n\nCreate question `name` with the given `message` and `options`. Uses [enquirer-question](https://github.com/enquirer/enquirer-question), visit that library for additional details.\n\n**Example**\n\n```js\nenquirer.question('color', 'What is your favorite color?');\nenquirer.question('color', 'What is your favorite color?', {\n  default: 'blue'\n});\nenquirer.question('color', {\n  message: 'What is your favorite color?',\n  default: 'blue'\n});\nenquirer.question({\n  name: 'color',\n  message: 'What is your favorite color?',\n  default: 'blue'\n});\nenquirer.question({\n  name: 'color',\n  type: 'input', // \"input\" is the default prompt type and doesn't need to be specified\n  message: 'What is your favorite color?',\n  default: 'blue'\n});\n```\n\n**Params**\n\n* `name` **{String|Object}**: Name or options object\n* `message` **{String|Object}**: Message or options object\n* `options` **{Object}**\n* `returns` **{Object}**: Returns the created question object\n\n**Events**\n\n* `emits`: `question`\n\n### [.ask](index.js#L193)\n\nInitialize a prompt session for one or more questions.\n\n**Example**\n\n```js\nvar Enquirer = require('enquirer');\nvar enquirer = new Enquirer();\n\nenquirer.question('first', 'First name?');\nenquirer.question('last', 'Last name?');\n\nenquirer.ask('first')\n  .then(function(answers) {\n    console.log(answers)\n  });\n\n// errors\nenquirer.ask('first')\n  .then(function(answers) {\n    console.log(answers)\n  })\n  .catch(function(err) {\n    console.log(err)\n  });\n```\n\n* `returns` **{Array|Object}** `questions`: One or more question objects or names of registered questions.\n\n**Events**\n\n* `emits`: `ask` With the array of `questions` to be asked\n\n### [.prompt](index.js#L227)\n\nInitialize a prompt session for a single question. Used by the [ask](#ask) method.\n\n**Example**\n\n```js\nvar Enquirer = require('enquirer');\nvar enquirer = new Enquirer();\n\nenquirer.question('first', 'First name?');\nenquirer.prompt('first')\n  .then(function(answers) {\n    console.log(answers)\n  });\n```\n\n**Params**\n\n* `name` **{String}**\n\n**Events**\n\n* `emits`: `prompt` with the `default` value, `key`, `question` object, and `answers` object\n* `emits`: `answer` with the `answer` value, `key`, `question` object, and `answers` object\n\n### [.separator](index.js#L269)\n\nCreate a new `Separator` to use in a choices array.\n\n### [.Separator](index.js#L292)\n\nCreate a new `Separator` to use in a choices array.\n\n## Prompt types\n\n**What is a prompt \"type\"?**\n\nPrompt types determine the type of question - or prompt - to initiate. Currently, the only prompt type that ships with enquirer is `input`.\n\nThese following additional prompt types are available as plugins:\n\n* [prompt-autocompletion](https://www.npmjs.com/package/prompt-autocompletion): Prompt that autocompletes as you type. Can be used standalone or with a prompt system… [more](https://github.com/enquirer/prompt-autocompletion) | [homepage](https://github.com/enquirer/prompt-autocompletion \"Prompt that autocompletes as you type. Can be used standalone or with a prompt system like [enquirer]\")\n* [prompt-checkbox](https://www.npmjs.com/package/prompt-checkbox): Multiple-choice/checkbox prompt. Can be used standalone or with a prompt system like [Enquirer]. | [homepage](https://github.com/enquirer/prompt-checkbox \"Multiple-choice/checkbox prompt. Can be used standalone or with a prompt system like [Enquirer].\")\n* [prompt-confirm](https://www.npmjs.com/package/prompt-confirm): Confirm (yes/no) prompt. Can be used standalone or with a prompt system like [Enquirer]. | [homepage](https://github.com/enquirer/prompt-confirm \"Confirm (yes/no) prompt. Can be used standalone or with a prompt system like [Enquirer].\")\n* [prompt-editor](https://www.npmjs.com/package/prompt-editor): Editor prompt. Opens your text editor and waits for you to save your input during… [more](https://github.com/enquirer/prompt-editor) | [homepage](https://github.com/enquirer/prompt-editor \"Editor prompt. Opens your text editor and waits for you to save your input during a prompt. Can be used standalone or with a prompt system like [Enquirer].\")\n* [prompt-expand](https://www.npmjs.com/package/prompt-expand): Expand prompt. Can be used as a standalone prompt, or with a prompt system like… [more](https://github.com/enquirer/prompt-expand) | [homepage](https://github.com/enquirer/prompt-expand \"Expand prompt. Can be used as a standalone prompt, or with a prompt system like [Enquirer].\")\n* [prompt-input](https://www.npmjs.com/package/prompt-input): This package name is not currently in use, but was formerly occupied by a popular… [more](https://github.com/npm/security-holder#readme) | [homepage](https://github.com/npm/security-holder#readme \"This package name is not currently in use, but was formerly occupied by a popular package. To avoid malicious use, npm is hanging on to the package name, but loosely, and we'll probably give it to you if you want it.\")\n* [prompt-list](https://www.npmjs.com/package/prompt-list): List-style prompt. Can be used as a standalone prompt, or with a prompt system like… [more](https://github.com/enquirer/prompt-list) | [homepage](https://github.com/enquirer/prompt-list \"List-style prompt. Can be used as a standalone prompt, or with a prompt system like [Enquirer].\")\n* [prompt-password](https://www.npmjs.com/package/prompt-password): Password prompt. Can be used as a standalone prompt, or with a prompt system like… [more](https://github.com/enquirer/prompt-password) | [homepage](https://github.com/enquirer/prompt-password \"Password prompt. Can be used as a standalone prompt, or with a prompt system like [Enquirer].\")\n* [prompt-question](https://www.npmjs.com/package/prompt-question): Question object, used by Enquirer and prompt plugins. | [homepage](https://github.com/enquirer/prompt-question \"Question object, used by Enquirer and prompt plugins.\")\n* [prompt-radio](https://www.npmjs.com/package/prompt-radio): Radio prompt. This prompt behaves like other radio-button interfaces, where only one choice is enabled… [more](https://github.com/enquirer/prompt-radio) | [homepage](https://github.com/enquirer/prompt-radio \"Radio prompt. This prompt behaves like other radio-button interfaces, where only one choice is enabled whilst all others are disabled. Can be used as a standalone prompt, or with a prompt system like [Enquirer].\")\n* [prompt-rawlist](https://www.npmjs.com/package/prompt-rawlist): Rawlist prompt. Can be used as a standalone prompt, or with a prompt system like… [more](https://github.com/enquirer/prompt-rawlist) | [homepage](https://github.com/enquirer/prompt-rawlist \"Rawlist prompt. Can be used as a standalone prompt, or with a prompt system like [Enquirer].\")\n\nOr you can use [enquirer-prompts](https://github.com/enquirer/enquirer-prompts), if you want a bundle with all of the listed prompt types.\n\n### Publishing prompt types\n\nPrompt modules are named using the convention `prompt-*`.\n\nTBC\n\n## Plugins\n\nTODO\n\n### Publishing plugins\n\nPlugin modules are named using the convention `enquirer-*`.\n\nTBC\n\n## Why another prompt module?\n\nWe use prompts extensively in our projects, and we wanted to improve the user experience and reduce dependencies associated with other libraries we tried, like Inquirer.\n\nOur main goals were:\n\n* reduce initial load time\n* make prompt-types easier to add\n* make code footprint smaller\n\n**Initial load time**\n\nEnquirer takes **~11ms** to load. This is about the same amount of time that it takes [chalk](https://github.com/chalk/chalk) to load.\n\nBy comparison, Inquirer takes **~120ms just to load**!!! This is about how long it takes babel, or other massive libraries that you would never include in production code.\n\nRegardless of whether or not a prompt is every actually used, your own application will be 120ms slower from having Inquirer in its dependency tree. This is caused by its own massive dependency tree, code redundancy, monolithic and slow [reactive interface](https://github.com/SBoudrias/Inquirer.js#reactive-interface) (which makes little sense for this use case anyway), poor API design (Inquirer actually executes code, even if you never call the library!), and so on.\n\n120ms might not seem like a lot, but there is a critical threshold where performance of an application begins to feel laggy, and having inquirer in your dependency tree cuts into that threshold significantly, leaving less room for everything else.\n\n**Make prompts easier to add**\n\nInquirer uses a [reactive interface](https://github.com/SBoudrias/Inquirer.js#reactive-interface) for flow control. Aside from being overkill and not offering and real code advantages, to work with the code you need to be familiar with microsoft's RX first. This makes it a pain to add new prompt types (e.g. you probably won't).\n\nRegarding the specific \"merits\" of RX alone, we think it's overkill, makes the application slow, bloated, hard to maintain, hard to contribute to, and difficult to extend. Events are sufficient.\n\n**Code footprint**\n\nBy moving prompt types into separate libraries, we're able to keep the core library small and fast. Moreover, implementors and authors can create their own prompt types without having to require enquirer itself (unlike inquirer). This also makes the individual prompt libraries easier to maintain.\n\n## About\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for avice on opening issues, pull requests, and coding standards.\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/enquirer/enquirer/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.31, on October 17, 2016._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/enquirer/enquirer.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "toc": true,
    "layout": "common-minimal",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    },
    "related": {
      "list": [],
      "prompts": [
        "prompt-autocompletion",
        "prompt-checkbox",
        "prompt-confirm",
        "prompt-editor",
        "prompt-expand",
        "prompt-input",
        "prompt-list",
        "prompt-password",
        "prompt-question",
        "prompt-radio",
        "prompt-rawlist"
      ]
    },
    "reflinks": [
      "prompt-base",
      "chalk",
      "enquirer-prompts",
      "enquirer-question"
    ]
  },
  "version": "0.4.1"
}
